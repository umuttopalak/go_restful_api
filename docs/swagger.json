{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/albums": {
            "post": {
                "description": "Creates a new album with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Creates a new album",
                "parameters": [
                    {
                        "description": "New album data",
                        "name": "newAlbum",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/albums.album"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/albums.album"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/": {
            "get": {
                "description": "Returns a list of albums",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Returns Albums",
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/albums.album"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/album/{id}": {
            "get": {
                "description": "Returns a single album by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Returns single album",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/albums.album"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/{artist}": {
            "get": {
                "description": "Returns a list of albums by a specific artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Returns albums by artist",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Artist name",
                        "name": "artist",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/albums.album"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/{id}": {
            "delete": {
                "description": "Deletes an album with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Deletes an album",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/albums.album"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/albums.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "description": "Returns a list of todos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Returns todos",
                "responses": {
                    "200": {
                        "description": "List of todos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todos.todo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/todos.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new todo with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Creates a new todo",
                "parameters": [
                    {
                        "description": "New todo data",
                        "name": "newTodo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todos.todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todos.todo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/todos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todos/todo/{id}": {
            "get": {
                "description": "Returns a single todo by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Returns single todo",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todos.todo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/todos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todos/{author}": {
            "get": {
                "description": "Returns a list of todos by a specific author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Returns todos by author",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Author name",
                        "name": "author",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of todos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todos.todo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/todos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "delete": {
                "description": "Deletes a todo with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Deletes a todo",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/todos.todo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/todos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "description": "Returns a list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Returns users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/users.user"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "description": "New user data",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.user"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/users.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/user/{id}": {
            "get": {
                "description": "Returns a single user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Returns single user",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.user"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Deletes a user",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.user"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/users.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "albums.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "albums.album": {
            "type": "object",
            "properties": {
                "artist": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "todos.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "todos.todo": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "users.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "users.user": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}